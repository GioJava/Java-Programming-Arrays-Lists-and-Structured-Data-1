#BlueJ class context
comment0.params=message\ whichSlice\ totalSlices
comment0.target=java.lang.String\ sliceString(java.lang.String,\ int,\ int)
comment1.params=encrypted\ klength\ mostCommon
comment1.target=int[]\ tryKeyLength(java.lang.String,\ int,\ char)
comment2.params=
comment2.target=void\ testSliceString()
comment3.params=
comment3.target=void\ testTryKeyLength()
comment4.params=fr
comment4.target=java.util.HashSet\ readDictionary(edu.duke.FileResource)
comment5.params=message\ dictionary
comment5.target=int\ countWords(java.lang.String,\ java.util.HashSet)
comment6.params=encrypted\ dictionary
comment6.target=java.lang.String\ breakForLanguage(java.lang.String,\ java.util.HashSet)
comment7.params=
comment7.target=void\ breakVigenere()
comment7.text=\ new\ version\ of\ breakVigenere\ with\ unkown\ length\n\ \ \n\ \ \ \ public\ void\ breakVigenere(){\n\ \ \ \ \ \ \ //\ create\ a\ new\ FileResource\n\ \ \ \ \ \ \ FileResource\ fr\ \=\ new\ FileResource();\n\ \ \ \ \ \ \ //\ Use\ that\ FileResource's\ .asString()\n\ \ \ \ \ \ \ String\ message\ \=\ fr.asString();\n\ \ \ \ \ \ \ //\ make\ a\ new\ FileResource\ to\ read\ from\ the\ English\ dictionary\n\ \ \ \ \ \ \ FileResource\ dicFile\ \=\ new\ FileResource("dictionaries/English");\n\ \ \ \ \ \ \ //\ use\ readDictionary\ method\ to\ read\ the\ contents\ of\ that\ dicFile\ into\ a\ HashSet\ of\ Strings\n\ \ \ \ \ \ \ HashSet<String>\ dictionary\ \=\ readDictionary(dicFile);\n\ \ \ \ \ \ \ //\ use\ breakForLanguage\ to\ decrypt\ encrypted\ message\n\ \ \ \ \ \ \ //String\ decrypted\ \=\ breakForLanguage(message,\ dictionary);\n\ \ \ \ \ \ \ \n\ \ \ \ \ \ \ //\ print\ out\ decrypted\ message\n\ \ \ \ \ \ \ //System.out.println("decrypted\:"\ +\ decrypted);\n\ \ \ \ }\n\ \ \ \ \n
comment8.params=dictionary
comment8.target=char\ mostCommonCharIn(java.util.HashSet)
comment8.text=\n\ Return\ character,of\ the\ letters\ in\ the\ English\ alphabet,\ \n\ that\ appears\ most\ often\ in\ the\ words\ in\ the\ dictionary\n
comment9.params=encrypted\ languages
comment9.target=void\ breakForAllLangs(java.lang.String,\ java.util.HashMap)
numComments=10
